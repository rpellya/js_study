// ОБЛАСТИ ВИДИМОСТИ 

/**
 * Область видимости - определяет границы действия переменной
 */

const l =5;

function myFn(){
   function innerFn(){
      console.log(l) // 5
   }
   innerFn()
}

myFn()

// ЖИЗНЕННЫЕ ЦИКЛ ПЕРМЕННЫХ
let a // 1. Определение a в глобальной области видимости. Её значение undefined
let b // 1. Определение b в глобальной области видимости. Её значение undefined

function myFn2(){
   let b // 3. Объявление b в зоне видимости функции
   a = true // 3. Объявлена ли a в зоне видимости функции? Нет. Объявлена ли a во внешней области видимости? Да. Присваивание значения true глобальной перменной a.
   b = 10 // 4. Объявлена ли b в рамках функции? Да. Присвоение этой переменной b значение 10
   comsole.log(a) // true
   comsole.log(b) // 10 // b имеет значение 10 в области видимости функции
}

myFn2() // 2. Вызов myFn2

comsole.log(a) // true // 4. a имеет значени true
comsole.log(b) // undefined // 6. b всё так же имеет значение undefined в глобальной области


//ТИПЫ ОБЛАСТЕЙ ВИДИМОСТИ

/**
 * Глобальная область видимости.
 * Область видимости функции.
 * Область видимости блока - пременные объявленные с помощью let или const внутри блока имеют область видимости, ограниченную этим блоком. Блок - любой код, который находится между фигурными скобками
 */

//Необъявленные перменные
//НЕ РЕКОМЕНДУЕТСЯ!

function myFn3(){
   a = true // Перменная a будет автоматически объявлена в глобальной области видимости
   console.log(a) // true
}

myFn3() 

console.log(a) // true


// Правила работы с переменными

/**
 * 1. Все переменные объявлять перед их использованием.
 * 2. Стараться использовать const везде, где это возможно.
 * 3. Внутри функций не изменять перменные с внешних областей видимости.
 */


// СТРОГИЙ РЕЖИМ
'use strict' // просто выражение. Запрещает использование необъявленных переменных. Эта строка должна быть первой в глобальной области видимости или в области видимости функции
function myFn4(){
   a = true // Uncaught ReferenceError: a is not defined
   console.log(a)
}

myFn4()

console.log(a)